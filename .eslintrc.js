'use strict'

const OFF = 0
const ERROR = 2

module.exports = {
    root: true,
    env: {
        es6: true,
        node: true,
        browser: true,
    },
    extends: [
        'eslint:recommended',
        'plugin:prettier/recommended',
        'prettier',
        'prettier/@typescript-eslint',
        'plugin:@typescript-eslint/eslint-recommended',
        'plugin:@typescript-eslint/recommended',
        'plugin:react/recommended',
        'prettier/react',
    ],
    settings: {
        react: {
            version: 'detect',
        },
    },
    parser: '@typescript-eslint/parser',
    parserOptions: {
        project: './tsconfig.json',
        ecmaVersion: 6,
        ecmaFeatures: {
            experimentalObjectRestSpread: true,
            jsx: true,
        },
        sourceType: 'module',
    },
    plugins: [
        'no-for-of-loops',
        'prettier',
        '@typescript-eslint',
        'react',
        'react-hooks',
        'jsx-a11y',
    ],
    rules: {
        'accessor-pairs': OFF,
        'brace-style': [ERROR, '1tbs'],
        'consistent-return': OFF,
        'dot-location': [ERROR, 'property'],
        'dot-notation': ERROR,
        'eol-last': ERROR,
        eqeqeq: [ERROR, 'always', { null: 'ignore' }],
        indent: OFF,
        'jsx-quotes': [ERROR, 'prefer-double'],
        'keyword-spacing': [ERROR, { after: true, before: true }],
        'max-len': [ERROR, 120, 2],
        'no-inner-declarations': [ERROR, 'functions'],
        'no-multi-spaces': ERROR,
        'no-restricted-syntax': [
            ERROR,
            'WithStatement',
            "BinaryExpression[operator='in']",
        ],
        'no-shadow': ERROR,
        'no-unused-expressions': ERROR,
        'no-unused-vars': ERROR,
        'no-use-before-define': ERROR,
        quotes: [
            ERROR,
            'single',
            { avoidEscape: true, allowTemplateLiterals: true },
        ],
        'sort-imports': ERROR,
        'space-before-blocks': ERROR,
        'space-before-function-paren': OFF,
        'valid-typeof': [ERROR, { requireStringLiterals: true }],
        'no-var': ERROR,

        'no-for-of-loops/no-for-of-loops': ERROR,

        '@typescript-eslint/indent': [ERROR, 4],
        '@typescript-eslint/no-unused-vars': [
            ERROR,
            { argsIgnorePattern: '^_' },
        ],
        '@typescript-eslint/member-delimiter-style': OFF,
        '@typescript-eslint/camelcase': [ERROR, { properties: 'never' }],

        'react/display-name': OFF,
        'react/forbid-prop-types': ERROR,
        'react/jsx-boolean-value': [ERROR, 'always'],
        'react/jsx-closing-bracket-location': ERROR,
        'react/jsx-closing-tag-location': ERROR,
        'react/jsx-curly-spacing': OFF,
        'react/jsx-filename-extension': [
            ERROR,
            { extensions: ['.jsx', '.tsx'] },
        ],
        'react/jsx-no-bind': [ERROR, { allowArrowFunctions: true }],
        'react/jsx-no-undef': ERROR,
        'react/jsx-pascal-case': ERROR,
        'react/jsx-sort-prop-types': OFF,
        'react/jsx-tag-spacing': ERROR,
        'react/jsx-uses-react': ERROR,
        'react/jsx-wrap-multilines': ERROR,
        'react/no-array-index-key': ERROR,
        'react/no-string-refs': ERROR,
        'react/no-is-mounted': ERROR,
        'react/prefer-es6-class': ERROR,
        'react/prefer-stateless-function': ERROR,
        'react/prop-types': OFF,
        'react/react-in-jsx-scope': ERROR,
        'react/require-render-return': ERROR,
        'react/self-closing-comp': ERROR,
        'react/sort-comp': ERROR,
        'react-hooks/rules-of-hooks': ERROR,

        'jsx-a11y/alt-text': ERROR,
        'jsx-a11y/img-redundant-alt': ERROR,
        'jsx-a11y/aria-role': ERROR,
        'jsx-a11y/no-access-key': ERROR,

        'prettier/prettier': [ERROR, require('./.prettierrc.js')],
    },
}
